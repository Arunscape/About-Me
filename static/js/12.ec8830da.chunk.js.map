{"version":3,"sources":["components/Header/Header.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","span","button","textTransform","Header","classes","useReactRouter","history","location","useContext","ThemeContext","dispatch","className","position","color","value","pathname","variant","onClick","push","href","checked","onChange","event","target","type","inputProps"],"mappings":"kSAoBMA,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,SAAU,GAEZC,KAAM,CACJD,SAAU,GAEZE,OAAQ,CACNC,cAAe,YAuFNC,UAlFU,WACvB,IAAMC,EAAUV,IADa,EAECW,MAAtBC,EAFqB,EAErBA,QAASC,EAFY,EAEZA,SAFY,EAKHC,qBAAWC,KALR,mBAKtBb,EALsB,KAKfc,EALe,KAO7B,OACE,yBAAKC,UAAWP,EAAQN,MACtB,kBAAC,IAAD,CACEc,SAAS,SAETC,MAAOjB,EAAMkB,MAAQ,UAAY,WAGjC,kBAAC,IAAD,KACyB,MAAtBP,EAASQ,SACP,kBAAC,IAAD,CACCF,MAAM,UACNF,UAAWP,EAAQH,QAEnB,kBAAC,IAAD,CAAYe,QAAQ,MAApB,aAKD,kBAAC,IAAD,CACCH,MAAM,UACNI,QAAS,kBAAMX,EAAQY,KAAK,MAC5BP,UAAWP,EAAQH,QAGnB,kBAAC,IAAD,CAAYe,QAAQ,MAApB,aAMJ,0BAAML,UAAWP,EAAQJ,OAEF,YAAtBO,EAASQ,UACR,kBAAC,IAAD,CACEF,MAAM,UACNM,KA3DK,sFAyDP,eAKE,kBAAC,IAAD,OAKJ,kBAAC,IAAD,CAEEC,QAASxB,EAAMkB,MAEfO,SAAU,SAACC,GAELA,EAAMC,OAAOH,QACfV,EAAS,CAAEc,KAAM,aAEjBd,EAAS,CAAEc,KAAM,eAKrBV,MAAM,SACNW,WAAY,CAAE,aAAc,wBAI5B7B,EAAMkB,MACJ,kBAAC,IAAD,MACA,kBAAC,IAAD","file":"static/js/12.ec8830da.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch'\n\n\nimport WhiteBalanceSunny from 'mdi-material-ui/WhiteBalanceSunny'\nimport WeatherNight from 'mdi-material-ui/WeatherNight'\n\nimport useReactRouter from 'use-react-router';\n\nimport { ThemeContext } from '../../util/themeContext';\n\nimport Download from 'mdi-material-ui/Download'\n\nconst RESUME_PDF = 'https://raw.githubusercontent.com/Arunscape/resume/master/Arun_Woosaree_Resume.pdf'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    span: {\n      flexGrow: 1,\n    },\n    button: {\n      textTransform: 'none',\n    }\n  }),\n);\n\nconst Header: React.FC = () => {\n  const classes = useStyles();\n  const { history, location } = useReactRouter();\n\n  // @ts-ignore\n  const [theme, dispatch] = useContext(ThemeContext);\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"static\"\n        // @ts-ignore\n        color={theme.value ? '#002884' : 'primary'}\n      // color='inherit'\n      >\n        <Toolbar>\n          {location.pathname === \"/\" ?\n            (<Button\n              color=\"inherit\"\n              className={classes.button}\n            >\n              <Typography variant=\"h6\" >\n                About Me\n              </Typography>\n            </Button>)\n            :\n            (<Button\n              color=\"inherit\"\n              onClick={() => history.push(\"/\")}\n              className={classes.button}\n\n            >\n              <Typography variant=\"h6\" >\n                About Me\n              </Typography>\n            </Button>)}\n\n\n          <span className={classes.span} />\n\n          {location.pathname === \"/resume\" && (\n            <Button\n              color=\"inherit\"\n              href={RESUME_PDF}\n            >\n              Download PDF\n              <Download />\n            </Button>\n\n          )}\n\n          <Switch\n            // @ts-ignore\n            checked={theme.value}\n            // @ts-ignore\n            onChange={(event) => {\n\n              if (event.target.checked) {\n                dispatch({ type: 'darkMode' })\n              } else {\n                dispatch({ type: 'lightMode' })\n              }\n\n            }\n            }\n            value=\"toggle\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n          />\n\n          {\n            theme.value ?\n              <WeatherNight /> :\n              <WhiteBalanceSunny />\n\n          }\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Header"],"sourceRoot":""}