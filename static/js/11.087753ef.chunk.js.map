{"version":3,"sources":["pages/Projects/Projects.tsx","util/index.ts"],"names":["useStyles","makeStyles","createStyles","card","maxWidth","minWidth","root","flexGrow","width","margin","marginTop","Projects","useContext","ThemeContext","theme","style","height","position","backgroundImage","value","backgroundRepeat","backgroundPosition","backgroundSize","backgroundAttachment","filter","zIndex","classes","useState","projects","setProjects","useEffect","fetch","then","res","json","data","className","container","direction","justify","alignItems","spacing","map","p","item","key","title","component","alt","image","previewimage","gutterBottom","variant","color","description","demourl","size","onClick","openNewTab","githuburl","aria-label","moreinfo","url","window","open"],"mappings":"iSA6BMA,EAAYC,YAChBC,YAAa,CACXC,KAAM,CACJC,SAAU,IACVC,SAAU,KAEZC,KAAM,CACJC,SAAU,EACVC,MAAO,MACPC,OAAQ,SACRC,UAAW,SA+HFC,UAtHY,WAAM,MAELC,qBAAWC,KAFN,mBAExBC,EAFwB,KAIzBC,GAJyB,KAIjB,CAIZC,OAAQ,OACRR,MAAO,OACPS,SAAU,QACVC,gBAAiBJ,EAAMK,MAAQ,gGAAkG,+FACjIC,iBAAkB,YAClBC,mBAAoB,gBACpBC,eAAgB,QAChBC,qBAAsB,QACtBC,OAAQ,YACRC,QAAS,IAGLC,EAAU1B,IApBe,EAsBC2B,mBAA2B,MAtB5B,mBAsBxBC,EAtBwB,KAsBdC,EAtBc,KA+B/B,OARAC,oBAAU,WACRC,MA1BiB,sFA2BdC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIN,EAAYM,MAC3B,IAIEP,EAMH,oCACE,kBAAC,IAAD,CAEEb,MAAOA,IAGT,yBAAKqB,UAAWV,EAAQpB,MACtB,kBAAC,IAAD,CACE+B,WAAS,EACTC,UAAU,MACVC,QAAQ,eACRC,WAAW,aACXC,QAAS,GAERb,EAASc,IAAI,SAAAC,GAAC,OACb,kBAAC,IAAD,CACEC,MAAI,EAEJC,IAAKF,EAAEG,OAEP,kBAAC,IAAD,CAAMV,UAAWV,EAAQvB,MACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE4C,UAAU,MACVC,IAAI,GACJhC,OAAO,MACPiC,MAAON,EAAEO,aACTJ,MAAOH,EAAEG,QAEX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYK,cAAY,EAACC,QAAQ,KAAKL,UAAU,MAC7CJ,EAAEG,OAEL,kBAAC,IAAD,CAAYM,QAAQ,QAAQC,MAAM,gBAAgBN,UAAU,KACzDJ,EAAEW,eAIT,kBAAC,IAAD,KAEGX,EAAEY,SACD,kBAAC,IAAD,CACEC,KAAK,QACLH,MAAM,UACNI,QAAS,kBAAMC,YAAWf,EAAEY,WAH9B,QASDZ,EAAEgB,WACD,kBAAC,IAAD,CACEC,aAAW,gCACXH,QAAS,kBAAMC,YAAWf,EAAEgB,aAE5B,kBAAC,IAAD,OAIHhB,EAAEkB,UACD,kBAAC,IAAD,CACEL,KAAK,QACLH,MAAM,UACNI,QAAS,kBAAMC,YAAWf,EAAEkB,YAH9B,qBAjET,6C,gCChFX,gCAAO,IAAMH,EAAa,SAACI,GAAD,OAAiBC,OAAOC,KAAKF,EAAK","file":"static/js/11.087753ef.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport GithubCircle from 'mdi-material-ui/GithubCircle'\n\nimport { openNewTab } from '../../util'\nimport { ThemeContext } from '../../util/themeContext';\n\n\ninterface project {\n  title: string,\n  githuburl?: string,\n  demourl?: string,\n  description: string,\n  previewimage: string,\n  wip?: boolean,\n  moreinfo?: string,\n}\n\nconst useStyles = makeStyles(\n  createStyles({\n    card: {\n      maxWidth: 400,\n      minWidth: 345,\n    },\n    root: {\n      flexGrow: 1,\n      width: '95%',\n      margin: \"0 auto\",\n      marginTop: '2%',\n    },\n  }),\n);\n\n\n\nconst PROJECTS_URL = 'https://raw.githubusercontent.com/Arunscape/About-Me/master/src/data/projects.json';\n\nconst Projects: React.FC = () => {\n  // @ts-ignore\n  const [theme, dispatch] = useContext(ThemeContext);\n\n  const style = {\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'fixed',\n    backgroundImage: theme.value ? \"url('https://raw.githubusercontent.com/Arunscape/About-Me/master/src/images/btwiusearch.jpg')\" : \"url('https://raw.githubusercontent.com/Arunscape/About-Me/master/src/images/background.jpg')\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center center\",\n    backgroundSize: \"cover\",\n    backgroundAttachment: \"fixed\",\n    filter: \"blur(4px)\",\n    zIndex: -1,\n  }\n\n  const classes = useStyles();\n\n  const [projects, setProjects] = useState<project[] | null>(null)\n  useEffect(() => {\n    fetch(PROJECTS_URL)\n      .then(res => res.json())\n      .then(data => setProjects(data))\n  }, [])\n\n\n\n  if (!projects) {\n    return <div>Loading...</div>\n  }\n\n\n  return (\n    <>\n      <Paper\n        // @ts-ignore\n        style={style}\n      />\n\n      <div className={classes.root}>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-around\"\n          alignItems=\"flex-start\"\n          spacing={3}\n        >\n          {projects.map(p => (\n            <Grid\n              item\n              // xl\n              key={p.title}\n            >\n              <Card className={classes.card}>\n                <CardActionArea>\n                  <CardMedia\n                    component=\"img\"\n                    alt=\"\"\n                    height=\"140\"\n                    image={p.previewimage}\n                    title={p.title}\n                  />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {p.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                      {p.description}\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n                <CardActions>\n\n                  {p.demourl && (\n                    <Button\n                      size=\"small\"\n                      color=\"inherit\"\n                      onClick={() => openNewTab(p.demourl!)}\n                    >\n                      Demo\n                  </Button>\n                  )}\n\n                  {p.githuburl && (\n                    <IconButton\n                      aria-label=\"View the souce code on GitHub\"\n                      onClick={() => openNewTab(p.githuburl!)}\n                    >\n                      <GithubCircle />\n                    </IconButton>\n                  )}\n\n                  {p.moreinfo && (\n                    <Button\n                      size=\"small\"\n                      color=\"inherit\"\n                      onClick={() => openNewTab(p.moreinfo!)}\n                    >\n                      More Info\n                  </Button>\n                  )}\n\n\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    </>\n  )\n}\n\n\nexport default Projects;\n\n// in case the atb 101 url disappears\n// https://web.archive.org/web/20190822230404/https://www.atb.com/learn/articles/Pages/atb-101-students-tackle-business-challenges.aspx","export const openNewTab = (url: string) => window.open(url, '_blank')"],"sourceRoot":""}